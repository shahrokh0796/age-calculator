!function(){var e={91:function(e){"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),t.hash&&(e+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},246:function(){const e=document.querySelector(".form"),t=document.querySelectorAll("label"),r=document.querySelector("#day"),n=document.querySelector("#month"),o=document.querySelector("#year"),s=document.querySelectorAll("small"),a=(document.querySelector(".ageBtn"),document.querySelectorAll("time"));function i(e,t,r){t.textContent=e,t.classList.add("err"),r.classList.add("err")}function c(e,t){null!=e.classList&&null!=t.classList&&(e.classList.remove("err"),t.classList.remove("err"),e.textContent="")}const u=(e,t)=>!(e.length<t||e.length>t);function l(e,t){return new Date(t,e,0).getDate()}e.addEventListener("submit",(function(e){e.preventDefault();const d=new Date,f=d.getDate(),b=d.getMonth()+1,m=d.getFullYear();let h=r.value,p=n.value,g=o.value;const{days:v,months:y,years:L}=function(e,t){const r=new Date(e),n=new Date(t),o=(r.getMonth(),r.getTime()),s=n.getTime();let a;a=o>s?new Date(o-s):new Date(s-o);const i=`${a.getDate()}-${a.getMonth()+1}-${a.getFullYear()}`.split("-");return{days:Number(Math.abs(i[0])-1),months:Number(Math.abs(i[1])-1),years:Number(Math.abs(i[2])-1970)}}(`${p}-${h}-${g}`,`${b}-${f}-${m}`);""!=h&&null!=h&&u(h,2)?h>l(p,g)?(i("Must be a valid day",s[0],t[0]),r.classList.add("red-border")):h>31?(i("Must be a valid day",s[0],t[0]),a[2].textContent="- -"):(c(s[0],t[0]),a[2].textContent=v,r.classList.remove("red-border")):(i("This field is required",s[0],t[0]),a[2].textContent="- -",r.classList.add("red-border")),""!=p&&null!=p&&u(p,2)?h>l(p,g)?(i("",s[1],t[1]),n.classList.add("red-border")):p>12?(i("Must be a valid month",s[1],t[1]),n.classList.add("red-border"),a[1].textContent="- -"):(c(s[1],t[1]),a[1].textContent=y,n.classList.remove("red-border")):(i("This field is required",s[1],t[1]),n.classList.add("red-border"),a[1].textContent="- -"),""!=g&&null!=g&&u(g,4)?h>l(p,g)?(i("",s[2],t[2]),o.classList.add("red-border")):g>m?(i("Must be a valid past",s[2],t[2]),a[0].textContent="- -",o.classList.add("red-border")):(c(s[2],t[2]),a[0].textContent=L,o.classList.remove("red-border")):(i("This field is required",s[2],t[2]),a[0].textContent="- -",o.classList.add("red-border"))}))},838:function(e,t,r){"use strict";e.exports=r.p+"images/736eae1ff09acfe04c50.png"},967:function(e,t,r){"use strict";e.exports=r.p+"images/76e952b1b427b84b83bd.svg"}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,r),s.exports}r.m=e,r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,{a:t}),t},r.d=function(e,t){for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var o=n.length-1;o>-1&&!e;)e=n[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e}(),r.b=document.baseURI||self.location.href,function(){"use strict";var e=r(91),t=r.n(e),n=new URL(r(838),r.b),o=new URL(r(967),r.b);t()(n),t()(o),r(246).ageCalculation}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,